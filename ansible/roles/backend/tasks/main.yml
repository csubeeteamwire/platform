---
- name: Create the backend storage directories
  file:
    path: "/data{{'/' + tw_environments[ (groups['backend_servers']|first) ] | default() if tw_environments is defined }}{{ '/' + item }}"
    owner: daemon
    mode: "{{ (item == 'archiving/gpg') | ternary('0700', '0750') }}" # sets file mode 0700 if the directory is archiving/gpg, else 0750
    state: directory
  when: config_done is defined
  run_once: true
  with_items:
     - 'archiving'
     - 'archiving/gpg'
     - 'assets'
     - 'website-screenshot-cache'
     - 'beat'
     - 'cluster_config'

- name: Create the backend certificate storage directories
  file:
    path: /data/{{ item }}
    owner: daemon
    group: ssl-cert
    mode: 0750
    state: directory
  when: config_done is defined
  run_once: true
  with_items:
    - certs
    - certs/apns

- name: Install the APNS certificate
  copy:
    src: "{{ apns_certificate }}"
    dest: /data/certs/apns/aps-production.pem
    mode: 0440
    owner: daemon
    group: ssl-cert
  when: config_done is defined
  run_once: true
  register: apns_source

- name: Install the secondary APNS certificate
  copy:
    src: "{{ apns_certificate_2 }}"
    dest: "/data/certs/apns/{{ apns_certificate_2 | basename }}"
    mode: 0440
    owner: daemon
    group: ssl-cert
  when: apns_certificate_2 is defined
  run_once: true
  register: apns2_source

- name: Install the third APNS certificate
  copy:
    src: "{{ apns_certificate_3 }}"
    dest: "/data/certs/apns/{{ apns_certificate_3 | basename }}"
    mode: 0440
    owner: daemon
    group: ssl-cert
  when: apns_certificate_3 is defined
  run_once: true
  register: apns3_source

- name: Check if teamwire worker is running
  command: docker ps
  register: docker_procs
  when: (apns_source.changed or apns2_source.changed or apns3_source.changed) and ansible_play_hosts | length() == 1

- name: Restart teamwire worker if APNS certificates have been updated and on single-setup
  command: docker restart teamwire_worker
  when: (apns_source.changed or apns2_source.changed or apns3_source.changed) and ansible_play_hosts | length() == 1 and 'teamwire_worker' in docker_procs.stdout # noqa line-length

- include_tasks: "single.yml"
  when: "'backend_servers' not in groups"

- include_tasks: "haproxy.yml"
  when: mysql_host is not defined and 'database_servers' in groups and groups['database_servers'] | length > 1

# The cluster backend deployment is delegated to the nomad servers
