---
- name: Ensure all required variables are defined before configuring the monitoring system
  assert:
    that:
      - monitoring_email_addresses is defined
      - mysql_root_password is defined
      - monitoring_db_user is defined
      - monitoring_db_name is defined
      - monitoring_db_password is defined
      - monitoring_db_web_user is defined
      - monitoring_db_web_name is defined
      - monitoring_db_web_password is defined
      - icinga_admin_password is defined
      - icinga_salt is defined
      - icinga_api_password is defined
  when: groups['all'] | length() == 1 or inventory_hostname in groups['monitoring']

# Using `apt-key` to add third party signing keys is deprecated
# https://wiki.debian.org/DebianRepository/UseThirdParty
- name: Get Icinga repository key
  get_url:
    url: https://packages.icinga.com/icinga.key
    dest: /usr/share/keyrings/icinga-archive-keyring.key
    mode: '0644'
  environment:
    HTTP_PROXY: "{{ http_proxy | default() }}"
    HTTPS_PROXY: "{{ http_proxy | default() }}"
  register: icinga_signing_key
  when: not offline_mode.stat.exists

- name: Dearmor Icinga repository key
  command: gpg --dearmor -o {{ (icinga_signing_key.dest | splitext)[0] }}.gpg {{ icinga_signing_key.dest }}
  when: icinga_signing_key.changed

- name: Add Icinga repository
  apt_repository:
    repo: deb [signed-by={{ (icinga_signing_key.dest | splitext)[0] }}.gpg] https://packages.icinga.com/debian icinga-{{ ansible_distribution_release }} main
    state: present
    filename: icinga2
    update_cache: yes
  when: not offline_mode.stat.exists

- name: Install Icinga2 and monitoring plugins
  apt: name={{ item }} state=present
  with_items:
    - icinga2
    - monitoring-plugins
    - nagios-plugins-contrib
    - libredis-perl
    - libmonitoring-plugin-perl
    - liblwp-useragent-determined-perl
    - libdbd-mysql-perl
  check_mode: no

- name: Clear plugin directory
  block:
    - name: Determine plugin directory content
      find:
        path: /usr/share/icinga2/include/plugins-contrib.d
        file_type: any
        hidden: yes
      register: plugin_dir_content
    - name: Delete plugin directory content
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ plugin_dir_content.files }}"
      loop_control:
        label: "{{ item.path }}"

- name: Enable and start the icinga2 daemon
  service: name=icinga2 state=started enabled=true

- name: Install additional icinga plugins
  copy:
    src: "{{ item }}"
    dest: /usr/lib/nagios/plugins
    mode: 0755
  with_fileglob:
    - "files/checks/*"

- name: Configure Icinga2 commands
  copy: src=commands.conf dest=/etc/icinga2/conf.d
  notify: restart icinga2

- name: Ensure sudo is installed
  apt:
    pkg: sudo
    state: present

- name: Set sudo escalation for icinga plugins
  lineinfile:
    dest: /etc/sudoers
    line: "nagios ALL=(root) NOPASSWD: /usr/lib/nagios/plugins/"
    state: present
    validate: '/usr/sbin/visudo -cf %s'

- name: Configure Icinga NodeName
  lineinfile:
    dest: /etc/icinga2/constants.conf
    regexp: "^//const NodeName = \"localhost\"$"
    line: "const NodeName = \"{{ inventory_hostname }}\""
    backrefs: yes
  notify: restart icinga2

- name: Fix Icinga PKI directory permissions
  file: dest=/etc/icinga2/pki owner=nagios group=nagios mode=0750

- name: Download Icinga check_ntp_time plugin
  get_url:
    url: https://repo.teamwire.eu/bin/icinga/check_ntp_time-{{ check_ntp_time_version }}
    dest: /var/cache/downloads/
    checksum: sha256:{{ check_ntp_time_checksum }}
  when: not offline_mode.stat.exists

- name: Install Icinga check_ntp_time plugin
  copy:
    src: /var/cache/downloads/check_ntp_time-{{ check_ntp_time_version }}
    dest: /usr/lib/nagios/plugins/check_ntp_time
    remote_src: yes

- name: Patch Icinga2 check_haproxy_stats plugin
  lineinfile:
    path: /usr/lib/nagios/plugins/check_haproxy_stats
    regexp: "^/usr/bin/perl"
    line: "#/usr/bin/perl"
    backrefs: yes

- include: "database-configuration.yml"
  when: mysql_root_password is defined

- include: "master.yml"
  when: groups['all'] | length() == 1 or inventory_hostname in groups['monitoring']

- include: "client.yml"


