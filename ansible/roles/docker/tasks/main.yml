---
- name: Ensure rsyslog is installed
  apt: pkg=rsyslog

- name: Configure rsyslog for docker containers
  copy: src=10-docker.conf dest=/etc/rsyslog.d/10-docker.conf
  notify: restart rsyslog

- name: Install logrotate job for cluster logs
  copy: src=container-log dest=/etc/logrotate.d/container-log

# Install and configure docker
- name: Check if the Docker repository signing key needs to be installed
  shell: bash -c "gpg --keyring /etc/apt/trusted.gpg -k 0EBFCD88 > /dev/null 2>&1 && echo present || echo absent"
  register: docker_repo_key
  changed_when: False
  check_mode: no

#### Temporary workaround until solution is implemented by Ansible ###
#### See Ansible issue: https://github.com/ansible/ansible/pull/49950
#- name: Add the Docker repository signing key (direct connection)
#  apt_key:
#    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
#    keyserver: hkp://p80.pool.sks-keyservers.net:80
#    state: present
#  when: docker_repo_key.stdout == "absent" and http_proxy is not defined

- name: Add the Docker repository signing key (direct connection)
  block:
    - command: apt-key adv --no-tty --keyserver hkps://keyserver.ubuntu.com --recv-keys 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      register: apt_key_tmp
      until: apt_key_tmp is not failed
      retries: 3
  rescue:
    - shell: curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9DC858229FC7DD38854AE2D88D81803C0EBFCD88' | apt-key add -
      args:
        warn: no
  when: docker_repo_key.stdout == "absent" and http_proxy is not defined

#### Temporary workaround until solution is implemented by Ansible ###
#### See Ansible issue: https://github.com/ansible/ansible/pull/49950
#### ADD '--no-tty'
- name: Add the Docker repository signing key (via proxy server)
  block:
    - command: apt-key adv --no-tty --keyserver hkps://keyserver.ubuntu.com --keyserver-options http-proxy=\"{{http_proxy}}\" --recv-keys 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      register: apt_key_tmp_prox
      until: apt_key_tmp_prox is not failed
      retries: 3
  rescue:
    - shell: curl -sSL 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x9DC858229FC7DD38854AE2D88D81803C0EBFCD88' | apt-key add -
      args:
        warn: no
  when: docker_repo_key.stdout == "absent" and http_proxy is defined

- name: Ensure apt-transport-https is installed
  apt: pkg=apt-transport-https state=present

- name: Add the Docker repository
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable'
    state: present
    update_cache: yes

- name: Install Docker
  apt: pkg=docker-ce state=present

- name: Install python3-docker
  apt: pkg=python3-docker state=present

# BUG DOCKER !!! REMOVE THIS WHEN A FIX IS RELEASED!!!
# ISSUE 315 python-docker bug - Debian bug 910822
# https://github.com/docker/docker-credential-helpers/issues/105#issuecomment-584764909
- name: "CHECK IF BUG FILE EXISTS"
  stat:
    path: "/usr/bin/docker-credential-secretservice"
  register: bug_file

- name: "FIX BUG PLATFORM MR-315-python-docker"
  command: "mv /usr/bin/docker-credential-secretservice /usr/bin/docker-credential-secretservice.broken"
  when: bug_file.stat.exists == true

- name: Add user 'teamwire' to the docker group
  user: name=teamwire groups=docker append=yes

- name: Create systemd drop-in directory for docker
  file: name=/etc/systemd/system/docker.service.d state=directory

- name: Configure proxy for docker
  when: http_proxy is defined and 'docker_registry' in groups
  template:
    src: http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  notify:
    - reload systemd
    - restart docker

- name: Disable proxy for docker when no proxy is configured
  when: http_proxy is not defined
  file:
    name: /etc/systemd/system/docker.service.d/http-proxy.conf
    state: absent
  notify:
    - reload systemd
    - restart docker

- name: Configure Docker daemon parameters
  template:
    src: docker.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker.conf
  notify:
    - reload systemd
    - restart docker

- name: Start Docker after mounting NFS shares
  copy:
    src: wait_for_nfs.conf
    dest: /etc/systemd/system/docker.service.d/wait_for_nfs.conf
  notify: reload systemd

# Make sure docker is restarted before the containers are set up, otherwise
# the restart would kill the running containers. We need to restart before the
# following step, otherwise the login would fail when a proxy is configured.
- meta: flush_handlers

- name: Check if installing offline
  stat: path=/etc/offline_installation
  register: offline_mode

- name: Install Docker Registry on configured host
  include_tasks: registry.yml
  when: config_done is defined and 'docker_registry' in group_names

- name: Log in on docker registry
  when:
    - config_done is defined
    - not "docker_registry" in groups
    - not offline_mode.stat.exists
  become: True
  become_user: teamwire
  docker_login:
    registry_url: "{{ 'harbor.teamwire.eu' if use_teamwire_registry | default('true') | bool else 'https://index.docker.io/v1/' }}"
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"

- include_tasks: cluster.yml
  when: groups['all'] | length() > 1
