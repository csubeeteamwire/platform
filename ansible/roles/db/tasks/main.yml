---
- name: Ensure mysql_root_password is configured before installing the Database
  fail: msg="MySQL root password is not defined. Please check the configuration file"
  when: config_done is defined and mysql_root_password is defined and mysql_root_password == None

- name: Check if installing a database cluster
  set_fact:
    galera_cluster: True
  when: '"database_servers" in groups and groups["database_servers"] | length > 1'

- name: Install MariaDB
  apt: name={{item}} state=present
  with_items:
  - mariadb-server
  - mariadb-client
  - python3-mysqldb
  register: mysql_initial_installation

- name: Create MariaDB binlog directory
  file:
    dest: /var/lib/mysql-binlog
    owner: mysql
    group: mysql
    mode: 0770
    state: directory
  when: '"database_servers" not in groups'

# Allow incoming connections to MySQL on all interfaces
- name: Configure MariaDB to listen on all interfaces
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: ^bind-address\s*=\s*127.0.0.1
    backrefs: yes
    line: "bind-address=0.0.0.0"
  notify: restart MariaDB

- name: Increase max_allowed_packet size
  replace:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: ^max_allowed_packet\s*=\s*\d+M
    replace: "max_allowed_packet=64M"
  notify: restart MariaDB

- name: Increase maximum allowed connections
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: ^max_connections
    line: "max_connections = 512"
  notify: restart MariaDB

- name: Set UTF8 as default character set
  copy: src=utf8.cnf dest=/etc/mysql/conf.d/utf8.cnf
  notify: restart MariaDB

- name: Set UTC as default time zone
  copy: src=timezone.cnf dest=/etc/mysql/conf.d/timezone.cnf
  notify: restart MariaDB

- name: Log slow queries
  copy: src=slow_query_log.cnf dest=/etc/mysql/conf.d/slow_query_log.cnf
  notify: restart MariaDB

- name: Disable unsecure functionality
  copy: src=security.cnf dest=/etc/mysql/conf.d/security.cnf
  notify: restart MariaDB

- name: Enable binary logs
  template: src=binlog.cnf.j2 dest=/etc/mysql/conf.d/binlog.cnf
  notify: restart MariaDB
  when: '"database_servers" not in groups'

- name: Start and enable MariaDB server
  service: name=mysql state=started enabled=yes

# Make sure MariaDB is restarted before the database is created, otherwise
# the configured defaults are not used.
- meta: flush_handlers

- name: Set password for root user on MariaDB interfaces
  mysql_user:
    name: root
    password: "{{mysql_root_password}}"
    host: "{{item}}"
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: mysql_root_password is defined and (galera_cluster is not defined or inventory_hostname == groups['database_servers'][0])
  with_items:
    - 127.0.0.1
    - ::1
    - "{{external_hostname|default()}}"

- name: Create Teamwire database(s)
  mysql_db:
    name: "{{ item.value.dbname }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: true
  with_dict:
    - "{{ mysql_databases }}"
  when: galera_cluster is not defined or inventory_hostname == groups['database_servers'][0]

- name: Create Teamwire database user(s)
  mysql_user:
    name: "{{ item.value.username }}"
    host: "%"
    password: "{{ item.value.password }}"
    priv: "{{ item.value.dbname }}.*:ALL/*.*:RELOAD"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  no_log: true
  with_dict:
    - "{{ mysql_databases }}"
  when: config_done is defined and (galera_cluster is not defined or inventory_hostname == groups['database_servers'][0])

  # Ensure MariaDB UTC timezone definition is present
- name: Count MariaDB UTC timezone definition
  command: "mysql --defaults-file=/etc/mysql/debian.cnf -Bs -e 'SELECT COUNT(*) FROM time_zone_name WHERE name=\"UTC\";' mysql"
  changed_when: false
  register: mariadb_timezone_count
  check_mode: no

- name: Import MariaDB UTC timezone definition
  shell: "mysql_tzinfo_to_sql /usr/share/zoneinfo/UTC UTC | mysql --defaults-file=/etc/mysql/debian.cnf mysql"
  when: mariadb_timezone_count.stdout == "0"

# Install database backup script
- include_tasks: backupscript.yml

- include_tasks: cluster.yml
  when: galera_cluster is defined

# Use command module instead of mysql_query for backward compatibility
- name: Get optimal innodb buffer size
  command: >
    mysql -e "SELECT CEILING(Total_InnoDB_Bytes*1.6/POWER(1024,3)) RIBPS FROM
    (SELECT SUM(data_length+index_length) Total_InnoDB_Bytes FROM information_schema.tables WHERE engine='InnoDB') A;"
  register: innodb_buffer_size
  become: yes

- name: Set innodb buffer size
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    insertafter: '\[mysqld\]'
    line: 'innodb_buffer_pool_size = {{ innodb_buffer_size.stdout_lines[1] | int }}G'
  notify: running config

# Configure optimizer search depth
- name: Read mariadb configuration file
  command: cat /etc/mysql/mariadb.conf.d/50-server.cnf
  register: mariadb_config_file

- name: Add optimizer search depth configuration if not present
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    insertafter: ^\[mariadb\]
    firstmatch: true
    line: optimizer_search_depth={{optimizer_search_depth_value}}
  when: mariadb_config_file.stdout.find('optimizer_search_depth=') == -1
  notify: set optimizer in runtime

- name: Change optimizer search depth configuration
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regex: ^optimizer_search_depth=
    firstmatch: true
    line: optimizer_search_depth={{optimizer_search_depth_value}}
  when: mariadb_config_file.stdout.find('optimizer_search_depth=') != -1
  notify: set optimizer in runtime