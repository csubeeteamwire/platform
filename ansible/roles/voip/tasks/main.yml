- name: Create data dirs
  file:
    path: "{{ item.path | default(item) }}"
    state: directory
    mode: 0755
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
  with_items:
    - "{{ VOIP_ROOT_PATH }}/transcripts"
    - {
        path: "{{ VOIP_ROOT_PATH }}/prosody/config",
        owner: 101,
        group: 101
      }
    - {
        path: "{{ VOIP_ROOT_PATH }}/prosody/prosody-plugins-custom",
        owner: 101,
        group: 101
      }
    - {
        path: "{{ VOIP_ROOT_PATH }}/jicofo",
        owner: 999,
        group: 1000 
      }
    - {
        path: "{{ VOIP_ROOT_PATH }}/jvb",
        owner: 999,
        group: 1000
      }
    - "{{ VOIP_ROOT_PATH }}/jigasi"
    - "{{ VOIP_ROOT_PATH }}/jibri"
  run_once: true

- name: Create JVB users for cluster environment.
  file:
    path: "{{ VOIP_ROOT_PATH }}/jvb{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  with_sequence: start=1 end="{{ end_at }}"
  vars:
    - end_at: "{{ groups['video_servers'] | count | int - 1 }}" 
  when: groups['all'] | length > 1

- name: Register docker registry with harbor
  set_fact:
    LOCAL_REGISTRY: "{{ groups['docker_registry'] | first }}:5000/"
  when:
    - config_done is defined
    - groups.docker_registry is defined

- name: Template voip nomad job file
  template:
    src: "voip.hcl.tmpl"
    dest: "{{ VOIP_ROOT_PATH }}/voip.hcl"
    owner: root
    group: root
    mode: 0644
  run_once: true
  when: groups['all'] | length > 1

- name: Login to the docker registry
  docker_login:
    registry_url: "{{ 'https://harbor.teamwire.eu' if use_teamwire_registry | default('true') | bool else 'https://index.docker.io/v1/' }}"
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"
  when: not offline_mode.stat.exists

- name: Pull VoIP Docker images
  docker_image:
    name: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ item }}:{{ VOIP_JITSI_VERSION }}"
    source: pull
    state: present
  delegate_to: "{{ groups['management_servers'] | first() }}"
  loop:
    - "{{ VOIP_CONTAINER_WEB }}"
    - "{{ VOIP_CONTAINER_PROSODY }}"
    - "{{ VOIP_CONTAINER_JICOFO }}"
    - "{{ VOIP_CONTAINER_JVB }}"
  when:
    - config_done is defined
    - not offline_mode.stat.exists
    - groups.docker_registry is defined

- name: Push VoIP Docker images to local registry
  docker_image:
    name: "{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ item }}:{{ VOIP_JITSI_VERSION }}"
    source: local
    repository: "{{ LOCAL_REGISTRY }}{{ 'harbor.teamwire.eu/' if use_teamwire_registry | default('true') | bool }}{{ item }}:{{ VOIP_JITSI_VERSION }}"
    push: true
  delegate_to: "{{ groups['management_servers'] | first() }}"
  loop:
    - "{{ VOIP_CONTAINER_WEB }}"
    - "{{ VOIP_CONTAINER_PROSODY }}"
    - "{{ VOIP_CONTAINER_JICOFO }}"
    - "{{ VOIP_CONTAINER_JVB }}"
  when:
    - config_done is defined
    - groups.docker_registry is defined

- name: Run voip container in a single server environment
  include_tasks: single.yml
  when:
    - config_done is defined
    - groups['all'] | length == 1
    